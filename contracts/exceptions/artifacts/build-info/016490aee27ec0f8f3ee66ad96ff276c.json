{
	"id": "016490aee27ec0f8f3ee66ad96ff276c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/exceptions/AssertExample.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\n// Simple example of how mappings work in Sol.\r\ncontract Ass {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/exceptions/AssertExample.sol": {
				"Ass": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/exceptions/AssertExample.sol\":109:132  contract Ass {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/exceptions/AssertExample.sol\":109:132  contract Ass {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f6535b5e409145af96494589e3a340f01b0cd890ed501b190f3fcdc0ee58774964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f6535b5e409145af96494589e3a340f01b0cd890ed501b190f3fcdc0ee58774964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 MSTORE8 JUMPDEST 0x5E BLOCKHASH SWAP2 GASLIMIT 0xAF SWAP7 0x49 GASLIMIT DUP10 0xE3 LOG3 BLOCKHASH CREATE SHL 0xC 0xD8 SWAP1 0xED POP SHL NOT 0xF EXTCODEHASH 0xCD 0xC0 0xEE PC PUSH24 0x4964736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "109:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f6535b5e409145af96494589e3a340f01b0cd890ed501b190f3fcdc0ee58774964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 MSTORE8 JUMPDEST 0x5E BLOCKHASH SWAP2 GASLIMIT 0xAF SWAP7 0x49 GASLIMIT DUP10 0xE3 LOG3 BLOCKHASH CREATE SHL 0xC 0xD8 SWAP1 0xED POP SHL NOT 0xF EXTCODEHASH 0xCD 0xC0 0xEE PC PUSH24 0x4964736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "109:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 109,
									"end": 132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 132,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6535b5e409145af96494589e3a340f01b0cd890ed501b190f3fcdc0ee58774964736f6c63430008110033",
									".code": [
										{
											"begin": 109,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 132,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/exceptions/AssertExample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/exceptions/AssertExample.sol\":\"Ass\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/exceptions/AssertExample.sol\":{\"keccak256\":\"0x6429dbed53d87237ecae4b1c16d350fe1377b69573fc6aa63314da4be3abe656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b451215957acee9cb3dd836b3762b2cfef3277502703655070539c2118a4cf55\",\"dweb:/ipfs/QmTMisG6VGS86TtCdynRFshobu11Fxc6umrvJJwm1RNtZd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/exceptions/AssertExample.sol": {
				"ast": {
					"absolutePath": "contracts/exceptions/AssertExample.sol",
					"exportedSymbols": {
						"Ass": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ass",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Ass",
							"nameLocation": "118:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "109:23:0",
							"usedErrors": []
						}
					],
					"src": "34:98:0"
				},
				"id": 0
			}
		}
	}
}